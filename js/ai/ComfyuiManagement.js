let reader=new FileReader;const comfyuiQueue=new TaskQueue(1);var socket=null;const uuid=crypto.randomUUID();var selected_workflow=null;var processing_prompt=false;var hostInput="";var portInput="";var workflowFileLoad="";hostInput.value=comfyuiHost;portInput.value=comfyuiPort;document.addEventListener("DOMContentLoaded",(function(){hostInput=document.getElementById("Comfyui_apiHost");portInput=document.getElementById("Comfyui_apiPort");workflowFileLoad=document.getElementById("Workflow_path_load");hostInput.value=comfyuiHost;portInput.value=comfyuiPort}));document.addEventListener("DOMContentLoaded",(function(){workflowFileLoad.addEventListener("change",(event=>{if(event.target.files.length===0){return}try{var workflowPath=event.target.files[0].name;reader.readAsText(event.target.files[0],"utf8");reader.addEventListener("loadend",(async()=>{try{const data=reader.result;selected_workflow=JSON.parse(data);createToast("Workflow loaded successfully.",workflowPath)}catch(e){if(e.name==="SyntaxError"){createToastError("Workflow Error.","The file "+workflowPath+" contains invalid JSON.")}else{createToastError("Workflow Error.","An unexpected error occurred: "+e.message)}}}),{once:true})}catch(e){if(e.code==="ENOENT"){}else{}}}))}));function displayFileName(){var input=document.getElementById("Workflow_path_load");var fileName=input.files.length>0?input.files[0].name:"No file chosen";document.getElementById("file-name").textContent=fileName}function connectToComfyui(){try{server_address=hostInput.value+":"+portInput.value;socket=new WebSocket("ws://"+server_address+"/ws?clientId="+uuid);socket.addEventListener("open",(event=>{}));socket.addEventListener("close",(event=>{socket=null}));socket.addEventListener("error",(event=>{socket=null}));return}catch(error){socket=null}}async function comufy_apiHeartbeat(){server_address=hostInput.value+":"+portInput.value;console.log("comufy_apiHeartbeat","start");const ComufyUI_Heartbeat_Label=document.getElementById("ComufyUI_Heartbeat_Label");try{const url="http://"+server_address+"/settings";const response=await fetch(url,{method:"GET",headers:{"Content-Type":"application/json",accept:"application/json"}});if(response.ok){console.log("apiHeartbeat","comufy_isAlive");ComufyUI_Heartbeat_Label.innerHTML="ComufyUI ON";ComufyUI_Heartbeat_Label.style.color="green"}else{console.log("apiHeartbeat","comufy_notAlive");ComufyUI_Heartbeat_Label.innerHTML="ComufyUI OFF";ComufyUI_Heartbeat_Label.style.color="red"}}catch(error){console.log("apiHeartbeat",error);console.log("apiHeartbeat","error comufy_notAlive");ComufyUI_Heartbeat_Label.innerHTML="ComufyUI OFF";ComufyUI_Heartbeat_Label.style.color="red"}}async function Comfyui_queue_prompt(prompt){try{p={prompt:prompt,client_id:uuid};const response=await fetch("http://"+server_address+"/prompt",{method:"POST",headers:{"Content-Type":"application/json",accept:"application/json"},body:JSON.stringify(p)});var response_data=await response.json();return response_data}catch(error){createToastError("Text2Image Error.","check COMFYUI!");return null}}async function Comfyui_get_history(prompt_id){try{const response=await fetch("http://"+server_address+"/history/"+prompt_id,{method:"GET",headers:{accept:"application/json"}});const data=await response.json();return data}catch(error){createToastError("Text2Image Error.","check COMFYUI!");return null}}async function Comfyui_get_image(image_data_to_recieve){try{const params=new URLSearchParams({filename:image_data_to_recieve.filename,subfolder:image_data_to_recieve.subfolder,type:image_data_to_recieve.type});const response=await fetch("http://"+server_address+"/view?"+params.toString());if(!response.ok){throw new Error(`HTTPエラー! ステータス: ${response.status}`)}const blob=await response.blob();var image_src=URL.createObjectURL(blob);return new Promise(((resolve,reject)=>{fabric.Image.fromURL(image_src,(img=>{if(img){resolve(img)}else{reject(new Error("Failed to create a fabric.Image object"))}}))}))}catch(error){console.error("画像取得エラー:",error);return null}}async function Comfyui_track_prompt_progress(prompt_id){return new Promise(((resolve,reject)=>{socket.onmessage=event=>{const message=JSON.parse(event.data);if(message.type==="executing"&&message.data.node===null&&message.data.prompt_id===prompt_id){resolve("Stop message received with matching prompt_id")}};socket.onerror=error=>{reject(`WebSocket error: ${error}`)};socket.onclose=()=>{reject("WebSocket closed before receiving stop message")}}))}async function Comfyui_handle_process_queue(layer,spinnerId){if(!socket)connectToComfyui();var requestData=baseRequestData(layer);if(text2img_basePrompt.text2img_model!="")requestData["model"]=text2img_basePrompt.text2img_model;var workflow=Comfyui_replace_placeholders(selected_workflow,requestData);comfyuiQueue.add((async()=>Comfyui_generate_image(workflow))).then((async img=>{var center=calculateCenter(layer);putImageInFrame(img,center.centerX,center.centerY)})).catch((error=>{createToastError("Generation Error.","check COMFYUI!")})).finally((()=>{removeSpinner(spinnerId)}))}async function Comfyui_generate_image(workflow){console.log("Comfyui_generate_image関数が呼び出されました。ワークフロー:",workflow);var response=await Comfyui_queue_prompt(workflow);if(!response)return null;processing_prompt=true;var prompt_id=response.prompt_id;await Comfyui_track_prompt_progress(prompt_id);response=await Comfyui_get_history(prompt_id);if(!response)return null;var image_data=response[prompt_id]["outputs"][Object.keys(response[prompt_id]["outputs"])[0]].images["0"];var img=await Comfyui_get_image(image_data);return new Promise((resolve=>{resolve(img)}))}function Comfyui_replace_placeholders(workflow,requestData){if("prompt"in requestData&&requestData["prompt"]!="")workflow=replacePlaceholder(workflow,"%prompt%",requestData["prompt"]);if("negative_prompt"in requestData&&requestData["negative_prompt"]!="")workflow=replacePlaceholder(workflow,"%negative_prompt%",requestData["negative_prompt"]);if("cfg_scale"in requestData&&requestData["cfg_scale"]!="")workflow=replacePlaceholder(workflow,"%cfg%",requestData["cfg_scale"]);if("steps"in requestData&&requestData["steps"]!="")workflow=replacePlaceholder(workflow,"%steps%",requestData["steps"]);if("sampler_name"in requestData&&requestData["sampler_name"]!="")workflow=replacePlaceholder(workflow,"%sampler%",requestData["sampler_name"]);if("scheduler"in requestData&&requestData["scheduler"]!="")workflow=replacePlaceholder(workflow,"%scheduler%",requestData["scheduler"]);if("model"in requestData&&requestData["model"]!="")workflow=replacePlaceholder(workflow,"%model%",requestData["model"]);if("seed"in requestData&&requestData["seed"]!="")workflow=replacePlaceholder(workflow,"%seed%",requestData["seed"],true);if("vae"in requestData&&requestData["vae"]!="")workflow=replacePlaceholder(workflow,"%vae%",requestData["vae"]);if("width"in requestData&&requestData["width"]!="")workflow=replacePlaceholder(workflow,"%width%",requestData["width"]);if("height"in requestData&&requestData["height"]!="")workflow=replacePlaceholder(workflow,"%height%",requestData["height"]);return workflow}function replacePlaceholder(workflow,placeholder,value){function replaceInObject(obj){for(let key in obj){if(typeof obj[key]==="string"){if(value==-1)value=Math.floor(Math.random()*5e7);obj[key]=obj[key].replace(placeholder,value)}else if(typeof obj[key]==="object"&&obj[key]!==null){replaceInObject(obj[key])}}}const newWorkflow=JSON.parse(JSON.stringify(workflow));replaceInObject(newWorkflow);return newWorkflow}async function comufySampler(){const server_address=hostInput.value+":"+portInput.value;const url=`http://${server_address}/object_info/KSampler`;try{const response=await fetch(url);if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`)}const data=await response.json();const models=data.KSampler.input.required.sampler_name[0].map((name=>({name:name})));updateSamplerDropdown(models)}catch(error){console.error("comufySampler: Fetch error",error)}}async function comufyUpscaler(){const server_address=hostInput.value+":"+portInput.value;const url=`http://${server_address}/object_info/UpscaleModelLoader`;try{const response=await fetch(url);if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`)}const data=await response.json();const models=data.UpscaleModelLoader.input.required.model_name[0].map((name=>({name:name})));updateUpscalerDropdown(models)}catch(error){console.error("comufyUpscaler: Fetch error",error)}}async function comufyModels(){const server_address=hostInput.value+":"+portInput.value;const url=`http://${server_address}/object_info/CheckpointLoaderSimple`;try{const response=await fetch(url);if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`)}const data=await response.json();const models=data.CheckpointLoaderSimple.input.required.ckpt_name[0].map((name=>({title:name,model_name:name})));updateModelDropdown(models)}catch(error){console.error("comufyModels: Fetch error",error)}}